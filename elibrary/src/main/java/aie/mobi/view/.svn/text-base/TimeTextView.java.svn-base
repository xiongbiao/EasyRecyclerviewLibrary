package com.youmobi.mmstore.view;

import android.widget.TextView;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Paint;
import android.text.Html;
import android.util.AttributeSet;

import com.zhuanbei.pinhuihui.R;

import java.text.DecimalFormat;
import java.util.Date;

public class TimeTextView extends TextView implements Runnable{

    Paint mPaint; //画笔,包含了画几何图形、文本等的样式和颜色信息

    private long[] times;

    private long mday, mhour, mmin, msecond;//天，小时，分钟，秒

    private boolean run=false; //是否启动了

    public TimeTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        mPaint=new Paint();
        TypedArray array = context.obtainStyledAttributes(attrs, R.styleable.TimeTextView);

        array.recycle(); //一定要调用，否则这次的设定会对下次的使用造成影响
    }

    public TimeTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        mPaint=new Paint();
        TypedArray array = context.obtainStyledAttributes(attrs, R.styleable.TimeTextView);

        array.recycle(); //一定要调用，否则这次的设定会对下次的使用造成影响
    }

    public TimeTextView(Context context) {
        super(context);
    }

    public long[] getTimes() {
        return times;
    }

    public void setTimes(long[] times) {
        this.times = times;
        mday = times[0];
        mhour = times[1];
        mmin = times[2];
        msecond = times[3];

    }

    public void setTime(long time) {
        Date date = new Date(time);

        long[] times = new long[4];
        times[0] = time / (60*3600);
        times[1] = time / 3600;
        times[2] = (time / 60)%60;
        times[3] = time % 60;
        setTimes(times);
    }

    /**
     * 倒计时计算
     */
    private void ComputeTime() {
        msecond--;
        if (msecond < 0) {
            mmin--;
            msecond = 59;
            if (mmin < 0) {
                mmin = 59;
                mhour--;
                if (mhour < 0) {
                    // 倒计时结束
                    mhour = 59;
                    mday--;

                }
            }

        }

    }

    public boolean isRun() {
        return run;
    }

    public void setRun(boolean run) {
        this.run = run;
    }
    DecimalFormat df=new DecimalFormat("##");
    @Override
    public void run() {
        //标示已经启动
        run=true;

        ComputeTime();

//        String st=df.format(msecond);
        String strTime="剩余 " +getV(mhour)+":"+ getV(mmin)+":"+ getV(msecond)+" 结束";
//        String strTime="还剩 "+mday+" "+"天 "+mhour+" 小时 "+ mmin+" 分钟 "+msecond+" 结束";
        this.setText(strTime);

        postDelayed(this, 1000);

    }

    private String getV(long i){
        String str = ""+i;
        if(i<10&&i>=0){
            str = "0"+i;
        }
        return str;
    }

}